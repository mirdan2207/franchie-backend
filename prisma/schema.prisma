// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  PARTNER
  EMPLOYEE
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())

  partner   Partner?
  employee  Employee?
}

model Partner {
  id        String     @id @default(uuid())
  userId    String     @unique
  name      String
  user      User       @relation(fields: [userId], references: [id])
  locations Location[]
}

model Location {
  id         String      @id @default(uuid())
  name       String
  address    String
  partnerId  String
  partner    Partner     @relation(fields: [partnerId], references: [id])
  employees  Employee[]
  menus      Menu[]
  orders     Order[]
  devices    Device[]
}

model Employee {
  id          String    @id @default(uuid())
  name        String
  rating      Float @default(0)
  position    String @default("unknown")
  email       String?
  phone       String?
  telegram    String?
  experience  Int?
  hiredDate   DateTime @default(now())

  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])

  locationId  String
  location    Location  @relation(fields: [locationId], references: [id])

  orders      Order[]
  reviews     Review[]
}

model Device {
  id          String   @id @default(uuid())
  login       String   @unique
  password    String
  locationId  String
  location    Location @relation(fields: [locationId], references: [id])
}

model Menu {
  id          String   @id @default(uuid())
  name        String
  price       Float
  category    String
  description String?
  isActive    Boolean  @default(true)

  locationId  String
  location    Location @relation(fields: [locationId], references: [id])
}

model Order {
  id           String      @id @default(uuid())
  customerName String
  total        Float
  createdAt    DateTime    @default(now())

  locationId   String
  location     Location    @relation(fields: [locationId], references: [id])

  employeeId   String
  employee     Employee    @relation(fields: [employeeId], references: [id])

  items        OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  menuId    String
  name      String
  price     Float
  quantity  Int

  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
}

model Review {
  id           String    @id @default(uuid())
  employeeId   String
  employee     Employee  @relation(fields: [employeeId], references: [id])
  customerName String
  rating       Int
  comment      String
  date         DateTime  @default(now())
}

model Log {
  id        String   @id @default(uuid())
  userId    String
  role      Role
  endpoint  String
  method    String
  timestamp DateTime @default(now())
}
